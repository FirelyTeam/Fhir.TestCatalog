<xs:schema xmlns:ctl="http://www.occamlab.com/ctl">
  <suite name="TrackThreeTest">
    <title:TrackThreeTest/>
    <starting-test>TrackThreeTest:base_test</starting-test>
  </suite>
  <test name="TrackThreeTest::base_test">
    <assertion>base main</assertion>
    <code>
      <call-test>TrackThreeTest::c8t3_2a_validate_observations_against_the_general_specification_test</call-test>
      <call-test>TrackThreeTest::c8t3_2b_validate_observations_against_a_server-side_profile_test</call-test>
    </code>
  </test>
  <test name="TrackThreeTest::c8t3_2a_validate_observations_against_the_general_specification_test" id="C8T3_2A">
    <code>@resources = Crucible::Generator::Resources.new

        @profile = @resources.track3_profile
        @profile.xmlId = nil 
        @profile.identifier = nil # clear the identifiers, in case the server checks for duplicates
        reply = @client.create @profile
        @profile.xmlId = reply.id if !reply.id.nil?
        
        options = {
          id: @profile.xmlId,
          resource: @profile.class,
          format: nil
        }
        @profile_url = @client.full_resource_url(options)
        @profile_url = reply.self_link if !reply.self_link.nil?

        @obs = @resources.track3_observations
        @obs.each do |x|
          x.xmlId = nil
          x.identifier = nil # clear the identifiers, in case the server checks for duplicates
          x.meta = nil
        end

         metadata {
          links 'http://wiki.hl7.org/index.php?title=FHIR_Connectathon_8#Track_3_-_Experimental:_Profiles_and_conformance'
          links 'http://hl7.org/implement/standards/FHIR-Develop/profile.html'
          links 'http://hl7.org/implement/standards/FHIR-Develop/observation.html'
          links 'http://www.hl7.org/implement/standards/fhir/http.html#validation'
          requires resource: 'Profile', methods: ['create']
          validates resource: 'Observation', methods: ['validate']
        }

        @obs.each do |x|
          reply = @client.validate(x)
          assert_response_ok(reply)
          if !reply.id.nil?
            assert( !reply.id.include?('_validate'), "Server created an Observation with the ID `_validate` rather than validate the resource.", reply.id)
          end
        end
 
        @client.destroy(FHIR::Profile, @profile.xmlId) if !@profile.xmlId.nil?
        # @obs.each do |x|
        #   @client.destroy(FHIR::Observation, x.xmlId) if !x.xmlId.nil?
        # end</code>
    <context>Validate Observations against the General Specification</context>
    <link>http://wiki.hl7.org/index.php?title=FHIR_Connectathon_8#Track_3_-_Experimental:_Profiles_and_conformance</link>
    <link>http://hl7.org/implement/standards/FHIR-Develop/profile.html</link>
    <link>http://hl7.org/implement/standards/FHIR-Develop/observation.html</link>
    <link>http://www.hl7.org/implement/standards/fhir/http.html#validation</link>
    <assertion>Validates the VALIDATE methods on Observation
Requires the CREATE methods on Profile
Asserts False: Server created an Observation with the ID `_validate` rather than validate the resource.</assertion>
  </test>
  <test name="TrackThreeTest::c8t3_2b_validate_observations_against_a_server-side_profile_test" id="C8T3_2B">
    <code>@resources = Crucible::Generator::Resources.new

        @profile = @resources.track3_profile
        @profile.xmlId = nil 
        @profile.identifier = nil # clear the identifiers, in case the server checks for duplicates
        reply = @client.create @profile
        @profile.xmlId = reply.id if !reply.id.nil?
        
        options = {
          id: @profile.xmlId,
          resource: @profile.class,
          format: nil
        }
        @profile_url = @client.full_resource_url(options)
        @profile_url = reply.self_link if !reply.self_link.nil?

        @obs = @resources.track3_observations
        @obs.each do |x|
          x.xmlId = nil
          x.identifier = nil # clear the identifiers, in case the server checks for duplicates
          x.meta = nil
        end

         metadata {
          links 'http://wiki.hl7.org/index.php?title=FHIR_Connectathon_8#Track_3_-_Experimental:_Profiles_and_conformance'
          links 'http://hl7.org/implement/standards/FHIR-Develop/profile.html'
          links 'http://hl7.org/implement/standards/FHIR-Develop/observation.html'
          links 'http://www.hl7.org/implement/standards/fhir/http.html#validation'
          requires resource: 'Profile', methods: ['create']
          validates resource: 'Observation', methods: ['validate']
        }

        @obs.each do |x|
          x.meta = FHIR::Resource::ResourceMetaComponent.new
          x.meta.profile = [ @profile_url ]
          reply = @client.validate(x)
          assert_response_ok(reply)
          if !reply.id.nil?
            assert( !reply.id.include?('_validate'), "Server created an Observation with the ID `_validate` rather than validate the resource.", reply.id)
          end
        end
 
        @client.destroy(FHIR::Profile, @profile.xmlId) if !@profile.xmlId.nil?
        # @obs.each do |x|
        #   @client.destroy(FHIR::Observation, x.xmlId) if !x.xmlId.nil?
        # end</code>
    <context>Validate Observations against a Server-Side Profile</context>
    <link>http://wiki.hl7.org/index.php?title=FHIR_Connectathon_8#Track_3_-_Experimental:_Profiles_and_conformance</link>
    <link>http://hl7.org/implement/standards/FHIR-Develop/profile.html</link>
    <link>http://hl7.org/implement/standards/FHIR-Develop/observation.html</link>
    <link>http://www.hl7.org/implement/standards/fhir/http.html#validation</link>
    <assertion>Validates the VALIDATE methods on Observation
Requires the CREATE methods on Profile
Asserts False: Server created an Observation with the ID `_validate` rather than validate the resource.</assertion>
  </test>
</xs:schema>
